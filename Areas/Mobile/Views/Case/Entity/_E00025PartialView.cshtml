<style>
    .E00025 {
        top: 5%;
    }

    span[class=k-input] {
        text-align: center;
    }

    .k-header .k-link {
        text-align: center;
    }

    .modal-dialog {
        width: 80%;
    }

    span[class=k-input] {
        text-align: center;
    }

    .democlass {
        background-color: gray;
    }
</style>

<!-- Modal -->
<!-- Modal content-->
<h4 style="text-align:center">@Resources.Langues.PriceList</h4>
<div>
    <div class="SA0001" id="printDiv1">
        <div class="row">
            <div class="form-horizontal">
                <div class="active col-xs-12"><h5><strong>@Resources.Langues.SMPunitpriceinquiry</strong></h5></div>
            </div>
        </div>
        <br />
        @model IEnumerable<DPDSP.Models.SMPChargeSubViewModel>
        <div class="outer">
            @(Html.Kendo().Chart(Model)
                                                    .Name("Chart")
                                                    .Title("")
                                                    .DataSource(dataSource => dataSource
                                                        .Read(read => read.Action("GetChartByYearAndComCode", "EntityE00025Popup", new { caseId = @Request.Params["caseId"], area = "Case" }))
                                                        .Group(group => group.Add(model => model.Month))
                                                        .Sort(sort => sort.Add(model => model.hours).Ascending())
                                                    )
                                                    .ChartArea(chartArea => chartArea
                                                        .Background("transparent")
                                                    )
                                                    .SeriesDefaults(seriesDefaults =>
                                                        seriesDefaults.Line()
                                                    )
                                                    .Series(series =>
                                                    {
                                                        series.Line(model => model.Value).Name("#= group.items[0].MonthString # ").CategoryField("hours").Markers(x => x.Visible(false));
                                                    })
                                                    .SeriesColors("#e8a1a2", "#264d7e", "#bbc9a5", "#698b47", "#3e4630", "#428b64", "#6e4a75", "#feec04", "#9e7339", "#4c4a3c", "#dd7b00", "#dd3420")
                                                    .ValueAxis(axis => axis.Numeric()
                                                    .Title(title => title.Text(Resources.Langues.Axis25).Font("12px Arial, Helvetica, sans-serif;"))
                                                        .Line(line => line.Visible(false))
                                                    )
                                                    .CategoryAxis(axis => axis
                                                    .Title(title => title.Text(Resources.Langues.Time + "[" + Resources.Langues.Hour + "]").Font("12px Arial, Helvetica, sans-serif;"))
                                                        .Line(line => line.Visible(true))
                                                        .MinorGridLines(mi => mi.Visible(true))
                                                        .MajorGridLines(ma => ma.Visible(false))
                                                    )
                                                    .Legend(legend => legend
                                                        .Position(ChartLegendPosition.Top)
                                                    )
                                                    .Tooltip(tooltip => tooltip
                                                        .Visible(true)
                                                        .Format("{0}")
                                                    ).Pannable(pannable => pannable
                                                        .Lock(ChartAxisLock.Y)
                                                    )
                                                    .Zoomable(zoomable => zoomable
                                                        .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                                        .Selection(selection => selection.Lock(ChartAxisLock.Y))
                                                    )
            )
        </div>
        <br />
        <div class="form-group" style="text-align:center">
            <button type="button" id="show-btn" class="button1 button-gray" onclick="clickShow('show')">@Resources.Langues.E15Ax</button>
        </div>
        <div class="outer grid hidden ">
            @(Html.Kendo().Grid<DPDSP.Models.SMPChargeGridModel>()
                                                    .Name("Grid")
                                                    .Columns(columns =>
                                                    {
                                                        columns.Bound(member => member.Hour).Title(Resources.Langues.Time).HtmlAttributes(new { style = "text-align:center;" });
                                                        columns.Bound(member => member.Jan).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.Jan).Format("{0:n1}");
                                                        columns.Bound(member => member.Feb).Title(Resources.Langues.Feb).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Mar).Title(Resources.Langues.Mar).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Apr).Title(Resources.Langues.Apr).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.May).Title(Resources.Langues.May).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Jun).Title(Resources.Langues.Jun).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Jul).Title(Resources.Langues.Jul).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Aug).Title(Resources.Langues.Aug).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Sep).Title(Resources.Langues.Sep).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Oct).Title(Resources.Langues.Oct).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Nov).Title(Resources.Langues.Nov).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                        columns.Bound(member => member.Dec).Title(Resources.Langues.Dec).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                                    })
                                                    .DataSource(dataSource => dataSource
                                                        .Ajax()
                                                        .Model(model => model.Id(SMPChargeGridModel => SMPChargeGridModel.Hour))
                                                        .Read(read => read.Action("GetGridByYear", "EntityE00025Popup", new { area = "Case", caseId = @Request.Params["caseId"] }))
                                                    )
            )
        </div>
        <div class="SA0002" id="printDiv2">
            <div class="row">
                <div class="form-horizontal">
                    <div class="active col-xs-12">
                        <h5><strong>@Resources.Langues.RECunitpriceinquiry</strong></h5>
                    </div>
                </div>
            </div>
            <br />
            <div>
                <div>
                    @(Html.Kendo().Chart<DPDSP.Models.RECChargeChartModel>()
                                            .Name("Chart1")
                                            .Title("")
                                            .DataSource(dataSource => dataSource
                                                .Read(read => read.Action("GetRECChargeChart", "EntityE00025Popup", new { area = "Case", caseId = @Request.Params["caseId"] }))
                                                .Group(group => group.Add(model => model.Year))
                                                .Sort(sort => sort.Add(model => model.Month).Ascending())
                                            )
                                            .ChartArea(chartArea => chartArea
                                                .Background("transparent")
                                            //.Width(1288)
                                            )
                                            .Series(series =>
                                            {
                                                series.Column(model => model.Value).Name("#= group.value #").CategoryField("month").Color("#2164d1");
                                            }
                                            )
                                            .Legend(legend => legend
                                                .Position(ChartLegendPosition.Top)
                                            )
                                            .SeriesColors("#2164d1", "#264d7e", "#bbc9a5", "#698b47", "#3e4630", "#428b64", "#6e4a75", "#feec04", "#9e7339", "#4c4a3c", "#dd7b00", "#dd3420")
                                            .ValueAxis(axis => axis.Numeric()
                                                .Title(title => title.Text(Resources.Langues.Axis25REC))
                                                .Line(line => line.Visible(false))
                                                .Labels(label => label.Format("{0:#,###}"))
                                            )
                                            .CategoryAxis(ca => ca
                                                .Line(line => line.Visible(true))
                                                .MinorGridLines(mi => mi.Visible(true))
                                                .MajorGridLines(ma => ma.Visible(false))
                                            )
                                            .Tooltip(tooltip => tooltip
                                                .Visible(true)
                                                .Format("{0}")
                                            )
                                            .Zoomable(zoomable => zoomable
                                                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                                                            )
                    )
                    
                </div>
                <br />
            </div>
        </div>
        <div class="form-group" style="text-align:center">
            @*<button type="button" onclick="PrintModal2()" class="btn btn-primary">@Resources.Langues.Print</button>*@
            <button type="button" class="button button-gray" onclick="nextEntity()">@Resources.Langues.OK</button>
        </div>
    </div>
</div>
<script src="~/Scripts/printThis/printThis.js"></script>
<script>
    $(document).ready(function () {
        $('.SA0001').hide();
        $('.SA0002').hide();
        var $modal = $('.E00025');
        var caseId = @Request.Params["caseId"];
        var $M0003Form = $('#M00003Form');
        $('#btn_E00025').removeClass('progress-bar-warning');

        
            $.blockUI();
            $.post("@Url.Action("GetCodeByCaseId", "EntityE00025Popup", new { area="Case" })", { caseId: caseId }, function (result) {
                if (result.success) {
                    if(result.listLocationCode){
                        result.listLocationCode.forEach(function(item) {
                            $('#'+ item).val(item);
                            $('.' + item).show();
                        });
                    }
                }
            }).fail(function () {
                bootbox.alert('@Resources.Langues.ContactAdmin');
            }).always(function () {
                //$.unblockUI();
            });

        $.blockUI();
        setTimeout(function () {
            $("#Chart").data("kendoChart").refresh();
            $("#Chart1").data("kendoChart").refresh();
            $('.k-header').attr('style', 'border-top-width: 1px;padding:0 0 0 0')
            $.unblockUI();
        }, 2000);
    });
    function PrintModal1() {
        $("#printDiv1").printThis();
    };

    function PrintModal2() {
        $("#printDiv2").printThis();
    };
</script>


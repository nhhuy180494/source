
@{
    ViewBag.Title = Resources.Langues.SMPChargeManagement;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/FaqAndNotice.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/KendoGrid.css")" rel="stylesheet" type="text/css" />
    <style>
        .form-control {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }

        span[class=k-input] {
            text-align: center;
        }

        .k-list-optionlabel {
            text-align: center;
        }

        #uploadModal {
            top: 5%;
        }

        #copyModal {
            top: 5%;
        }

        .input-validation-error {
            border: 1px solid red !important;
        }
    </style>
}

<h2>@ViewBag.Title</h2>

<div class="container-fluid adminSiteContent onlyOneGrid">
    <div class="form-group">
        @(Html.Kendo().Grid<DPDSP.Models.SMPChargeManagementViewModel>()
                                .Name("SMPChargeGrid")
                                .Columns(columns =>
                                {
                                    columns.Bound(m => m.SmpChargeId).Hidden();
                                    columns.Bound(m => m.SMPChargeSubId).Hidden();
                                    columns.Bound(m => m.ComCode).Hidden();
                                    columns.Bound(member => member.ComSubName).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.ComSubName);
                                    columns.Bound(member => member.YearMonthDay).Format("{0: yyyy/MM/dd}").HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.YearMonthDay);
                                    columns.Bound(member => member.HourDisplay).ClientTemplate("#= kendo.toString(HourDisplay.Hours,\"00\")#:#= kendo.toString(HourDisplay.Minutes,\"00\")#").HtmlAttributes(new { style = "text-align:center;", @disabled = "disabled" }).Title(Resources.Langues.HourDisplay);
                                    columns.Bound(member => member.Value).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.SmpPriceInGrid).Format("{0:#,##}");
                                    columns.Bound(member => member.MaxValue).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.MaxValue).Format("{0:#,##}");
                                    columns.Bound(member => member.MinValue).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.MinValue).Format("{0:#,##}");
                                    columns.Bound(member => member.AvgValue).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.AvgValue).Format("{0:#,##}");
                                    columns.Bound(member => member.Hour).Hidden();
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);
                                //command.Custom(Resources.Langues.Delete).Click("deletePowergent").HtmlAttributes(new { @class = "btn-danger" });
                            }).HtmlAttributes(new { style = "text-align:center;" });
                                })
                                .ToolBar(tools =>
                                {
                                    tools.Template(@<text>
                                        <div class="row">
                                            <div class="col-md-2 col-lg-2">
                                                @Resources.Langues.Area @(Html.Kendo().DropDownList()
                                              .Name("ComSubType")
                                              .DataTextField("Text")
                                              .DataValueField("Value")
                                              .DataSource(source =>
                                              {
                                                                  source.Read(read =>
                                                                  {
                                                                      read.Action("Read_ComSub", "SMPChargeManagement", new { area = "Admin" });
                                                                  });
                                                              })
                                              .OptionLabel("-Select-")
                                                )
                                            </div>
                                            <div class="col-md-2 col-lg-2">
                                                @Resources.Langues.Year @(Html.Kendo().DropDownList()
                                            .Name("selectYear")
                                            .DataTextField("Text")
                                            .DataValueField("Value")
                                            .DataSource(source =>
                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("GetYearByCommSubCode", "SMPChargeManagement", new { area = "Admin" }).Data("dataYear");
                                                                });
                                                            }).OptionLabel(Resources.Langues.PleaseSelect)
                                            .Events(ev => ev.Change("searchByYear"))
                                                )
                                            </div>
                                            <div class="col-md-2 col-lg-2">
                                                @Resources.Langues.Month @(Html.Kendo().DropDownList()
                                     .Name("selectMonth")
                                     .DataTextField("Text")
                                     .DataValueField("Value")
                                     .Events(e => e.Change("changeMonth"))
                                     .BindTo(new List<SelectListItem>() {
                                                  new SelectListItem() {
                                                      Text = Resources.Langues.PleaseSelect,
                                                      Value = "-1"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "1",
                                                      Value = "1"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "2",
                                                      Value = "2"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "3",
                                                      Value = "3"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "4",
                                                      Value = "4"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "5",
                                                      Value = "5"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "6",
                                                      Value = "6"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "7",
                                                      Value = "7"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "8",
                                                      Value = "8"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "9",
                                                      Value = "9"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "10",
                                                      Value = "10"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "11",
                                                      Value = "11"
                                                  },
                                                  new SelectListItem() {
                                                      Text = "12",
                                                      Value = "12"
                                                  }
                                                      })
                                     .Value("-1")
                                                )
                                            </div>
                                            <div class="col-md-5" style="float:right;">
                                                <button id="showCopyModal" disabled="disabled" class="k-button k-button-icontext pull-right">@Resources.Langues.YearCopy</button>
                                                @*<button id="showImportModal" class="k-button k-button-icontext pull-right">@Resources.Langues.Excelbatchregistration</button>*@
                                                <button id="export" disabled="disabled" class="k-button k-button-icontext pull-right">@Resources.Langues.Downloadtheform</button>
                                                <button data-target="#UploadFileForm" data-toggle="modal" class="k-button k-button-icontext pull-right"><span class="k-icon k-i-add"></span>@Resources.Langues.UploadForm</button>
                                            </div>
                                        </div>
                                    </text>);
                                    })
                                    .Editable(editable => editable.Mode(GridEditMode.InLine))
                                    .Events(ev =>
                                    {
                                        ev.Edit("onEdit");
                                    })
                                    .Pageable()
                                    .Sortable()
                                    .Scrollable(rz => rz.Enabled(true))
                                    .Resizable(rz => rz.Columns(true))
                                    .HtmlAttributes(new { style = "height:700px;" })
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(48)
                                        .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                        .Model(model => { model.Id(p => p.SmpChargeId); })
                                        .Read(read => read.Action("Read_SMPChargeAndChargeSub", "SMPChargeManagement", new { area = "Admin" }).Data("dataComSubCode"))
                                        .Update(update => update.Action("Update_SMPChargeAndSMPChargeSub", "SMPChargeManagement"))
                                )
        )
    </div>
</div>

@using (Html.BeginForm("ImportExcel", "SMPChargeManagement", new { area = "Admin" }, FormMethod.Post, new { @role = "form", @id = "formUpload", @enctype = "multipart/form-data" }))
{
    <!-- Modal -->
    <div class="modal fade" id="uploadModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Resources.Langues.Upload</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-md-3 control-label">@Resources.Langues.Area</label>
                            <div class="col-md-9">
                                @(Html.Kendo().DropDownList()
                                          .Name("ComSubTypeUpload")
                                          .DataTextField("Text")
                                          .DataValueField("Value")
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("Read_ComSub", "SMPChargeManagement", new { area = "Admin" });
                                              });
                                          })
                                          .Events(e => e.Change("onUploadDropdownChange"))
                                          .OptionLabel("-Select-").HtmlAttributes(new { style = "text-align:center;" })
                                          .HtmlAttributes(new
                                          {
                                              style = "width: 100%",
                                              @data_val = "true",
                                              @dat_val_required = "The ComCode is required."
                                          })
                                )
                            </div>
                        </div>
                        <div class="form-group hidden">
                            <label class="col-md-3 control-label">@Resources.Langues.SourceYear </label>
                            <div class="col-md-9">
                                <select class="form-control toolbarInput" id="sourceYearUpload" name="sourceYearUpload"></select>
                            </div>
                        </div>
                        <div class="form-group hidden">
                            <label class="col-md-3 control-label">@Resources.Langues.TargetYear </label>
                            <div class="col-md-9">
                                <select data-val="true" , dat-val-required="The Target year is required." class="form-control toolbarInput" id="targetYearUpload" name="TargetYear"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <input class="form-control" id="file" data-val="true" , dat-val-required="Please select a file."
                                   name="ExcelFile" type="file" accept=".xlsx, .xls" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="import" class="btn btn-primary">@Resources.Langues.Import</button>
                    <button type="button" class="btn btn-gray" data-dismiss="modal">@Resources.Langues.Close</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="copyModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Resources.Langues.YearCopy</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-md-3 control-label">@Resources.Langues.SourceYear </label>
                        <div class="col-md-9">
                            <select class="form-control toolbarInput" id="sourceYearCopy" name=""></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">@Resources.Langues.TargetYear </label>
                        <div class="col-md-9">
                            <select data-val="true" , dat-val-required="The Target year is required." class="form-control toolbarInput" id="targetYearCopy" name=""></select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="runCopy" class="btn btn-primary">@Resources.Langues.Run</button>
                <button type="button" class="btn btn-gray" data-dismiss="modal">@Resources.Langues.Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="UploadFileForm" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Import Excel Modal</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("ExcelRegistSMPCharge", "SMPChargeManagement", FormMethod.Post, new { @role = "form", @id = "ManualForm", @enctype = "multipart/form-data" }))
                {
                    @*<form method="post" action="@Url.Action("ImportIntoDb", "WindSpeedManagement", new { area = "Admin" })">*@
                    <div class="demo-section k-content">
                        @Html.Kendo().Upload().Name("File").HtmlAttributes(new { aria_label = "files" })
                        <p style="padding-top: 1em; text-align: right">
                            <a type="button" class="k-button k-primary" href="~/Content/AddExcelRegistForm/SMPChargeSub.csv">Sample Form</a>
                            <button type="submit" class="k-button k-primary">Submit</button>
                        </p>
                    </div>
                    @*</form>*@
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var $manualForm = $('#ManualForm');
        $(document).ready(function () {
            var $uploadModal = $('#uploadModal');
            var $copyModal = $('#copyModal');
            var smpChargeGrid = $('#SMPChargeGrid').data('kendoGrid');
            var dropdownList = $('#ComSubType').data('kendoDropDownList');
            var uploadDropdown = $('#ComSubTypeUpload').data('kendoDropDownList');
            var $formUpload = $('#formUpload');

            $("#ComSubType").change(function () {
                var comSubCodeSelected = $(this).val();
                $("#selectYear").data("kendoDropDownList").dataSource.read();
                var yearSelected = $('#selectYear').val();
                var monthSelected = $('#selectMonth').val();
                smpChargeGrid.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
                if ($(this).val() === "") {
                    $('#export').attr("disabled", "disabled");
                    $('#showCopyModal').attr("disabled", "disabled");
                } else {
                    $('#export').removeAttr("disabled");
                    $('#showCopyModal').removeAttr("disabled");
                }
            });

            $('#runCopy').click(function () {
                $copyModal.modal('hide');
                $.blockUI();
                var dataSource = JSON.stringify(smpChargeGrid.dataSource.view());
                var sourceYearCopy = $('#sourceYearCopy').val();
                var targetYearCopy = $('#targetYearCopy').val();
                var comSubCode = dropdownList.value()
                $.post('@Url.Action("CopySMP", "SMPChargeManagement", new { area="Admin" })',
                    { comSubCode: comSubCode, targetYear: targetYearCopy, sourceYear: sourceYearCopy },
                    function (result) {
                        if (result.success) {
                            if (result.insert) {
                                bootbox.alert('Inserted successfully!');
                            } else {
                                bootbox.alert('Updated successfully!');
                            }
                            smpChargeGrid.dataSource.read(dataComSubCode());
                        } else {
                            bootbox.alert('Please try again!');
                        }
                    }).fail(function () {
                        bootbox.alert('@Resources.Langues.ContactAdmin');
                    }).always(function () {
                        $.unblockUI();
                    })
            });

            $('#showCopyModal').click(function () {
                $copyModal.modal('show');
            });

            $('#export').click(function () {
                var comSubCode = dropdownList.value();
                var yearSelected = $('#selectYear').val();
                window.location = '@Url.Action("ExportToExcel", "SMPChargeManagement", new { area = "Admin"})?comSubCode=' + comSubCode + "&year=" + yearSelected;
            });

            $('#showImportModal').click(function () {
                $uploadModal.modal('show');
            });

            $formUpload.on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });

            $('#import').click(function () {
                var isValid = $formUpload.valid();
                if (isValid && $('#file').val() != "" && $('#targetYearUpload').val()) {
                    $formUpload.submit();
                }
                if ($('#file').val() == "") {
                    $('#file').addClass('input-validation-error');
                }

                if (!$('#targetYearUpload').val()) {
                    $('#targetYearUpload').addClass('input-validation-error');
                }
            });

            $copyModal.on('show.bs.modal', function () {
                var comSubCode = dropdownList.value();
                clearCopySelect();
                $.blockUI();
                $.post("@Url.Action("GetSourceYear", "SMPChargeManagement", new { area = "Admin" })", { comSubCode: comSubCode }, function (result) {
                    if (result.success) {
                        if (result.listSourceYear.length !== 0) {
                            var listYear = result.listSourceYear;
                            listYear.forEach(function (item) {
                                $("<option/>", {
                                    value: item.Value,
                                    text: item.Text
                                }).appendTo($('#sourceYearCopy'));
                            });
                            var beginYear = parseInt(listYear[0].Value) + 1;
                            var futureYear = beginYear + 5;
                            for (var year = beginYear; year <= futureYear; year++) {
                                $('<option/>', { value: year, text: year }).appendTo($('#targetYearCopy'))
                            }
                        }
                        //else {
                        //    if (uploadDropdown.value() === "") {

                        //    }
                        //    else {
                        //        var date = new Date();
                        //        var currentYear = date.getFullYear();
                        //        var beginYear = parseInt(currentYear) + 1;
                        //        var futureYear = beginYear + 5;
                        //        for (var year = beginYear; year <= futureYear; year++) {
                        //            $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                        //        }
                        //    }
                        //}
                    }
                }).fail(function () {
                    bootbox.alert('@Resources.Langues.ContactAdmin');
                }).always(function () {
                    $.unblockUI();
                });
            });

            $('#sourceYearCopy').change(function () {
                $('#targetYearCopy').empty();
                var beginYear = parseInt($(this).val()) + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearCopy'))
                }
            });

            $('#sourceYearUpload').change(function () {
                $('#targetYearUpload').empty()
                var beginYear = parseInt($(this).val()) + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                }
            });

            $uploadModal.on('show.bs.modal', function () {

            });

            $uploadModal.on('hidden.bs.modal', function () {
                clearUploadModal();
                clearUploadSelect();
                $('#ComSubTypeUpload').data('kendoDropDownList').text("");
                $('#ComSubTypeUpload').data('kendoDropDownList').value("");
            });

            $('#targetYearUpload').change(function () {
                if ($(this).val()) {
                    $('#targetYearUpload').removeClass('input-validation-error');
                }
            });

            $('#sourceYearUpload').change(function () {
                var beginYear = this.val() + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                }
            });

            $("#file").on("change", function () {
                if ($(this).val() != "") {
                    $("#file").removeClass('input-validation-error');
                }
            });

            $formUpload.submit(function (e) {
                $uploadModal.modal('hide');
                $.blockUI();
                var formData = new FormData(this);
                var formObj = $(this);
                var data = new FormData(this);
                var urlAction = formObj.attr('action');
                $.ajax({
                    url: urlAction,
                    type: 'POST',
                    dataType: "Json",
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: data,
                    fail: function () {
                        bootbox.alert('@Resources.Langues.ContactAdmin');
                    }
                }).always(function () {
                    $.unblockUI();
                }).success(function (result) {
                    if (result.success) {
                        bootbox.alert('Upload Successfully!');
                        if (dropdownList.value() != "") {
                            smpChargeGrid.dataSource.read(dataComSubCode());
                        }
                    } else {
                        if (result.message) {
                            bootbox.alert(result.message);
                        } else {
                            bootbox.alert('Please check your excel file data again!');
                        }
                    }
                });
                e.preventDefault();
            });

            $manualForm.on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $manualForm.submit(function (e) {
            $.blockUI();
            var data = new FormData(this);
            var $fromObj = $(this);
            var urlAction = $fromObj.attr('action');
            $.ajax({
                url: urlAction,
                cache: false,
                type: 'POST',
                dataType: "Json",
                contentType: false,
                cache: false,
                processData: false,
                data: data,
                fail: function () {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.ContactAdmin');
                }
            }).always(function () {
                //$.unblockUI();
            }).success(function (result) {
                if (result.success) {
                    $.unblockUI();
                    $('#UploadFileForm').modal("hide")
                    bootbox.alert("@Resources.Langues.Successful");
                } else {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.Pleasecheckyourdataagain');
                }
            });
            e.preventDefault();
        });

        function onUploadDropdownChange() {
            var uploadDropdown = $('#ComSubTypeUpload').data('kendoDropDownList');
            var comSubCode = uploadDropdown.value();
            clearUploadSelect();
            clearUploadModal();
            $.blockUI();
            $.post("@Url.Action("GetSourceYear", "SMPChargeManagement", new { area = "Admin" })", { comSubCode: comSubCode }, function (result) {
                if (result.success) {
                    if (result.listSourceYear.length !== 0) {
                        var listYear = result.listSourceYear;
                        listYear.forEach(function (item) {
                            $("<option/>", {
                                value: item.Value,
                                text: item.Text
                            }).appendTo($('#sourceYearUpload'));
                        });
                        var beginYear = parseInt(listYear[0].Value) + 1;
                        var futureYear = beginYear + 5;
                        for (var year = beginYear; year <= futureYear; year++) {
                            $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                        }
                    } else {
                        if (uploadDropdown.value() === "") {

                        }
                        else {
                            var date = new Date();
                            var currentYear = date.getFullYear();
                            var beginYear = parseInt(currentYear);
                            var futureYear = beginYear + 5;
                            for (var year = beginYear; year <= futureYear; year++) {
                                $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                            }
                        }
                    }
                }
            }).fail(function () {
                bootbox.alert('@Resources.Langues.ContactAdmin');
            }).always(function () {
                $.unblockUI();
            });
        }

        function clearUploadSelect() {
            $('#targetYearUpload').empty();
            $('#sourceYearUpload').empty();
        }

        function clearCopySelect() {
            $('#targetYearCopy').empty();
            $('#sourceYearCopy').empty();
        }

        function clearUploadModal() {
            //$('#formUpload')[0].reset();
            $('#formUpload').find('input', 'select').removeClass('input-validation-error');
            $('#formUpload').find('input[type=file]').val('');
            $('#targetYearUpload').removeClass('input-validation-error');
        }

        function onEdit(e) {
            $(e.container).find('input[name=ComSubName]').css("display", "none");
            $(e.container).find('input[name=YearMonthDay]').css("display", "none");
            $(e.container).find('input[name=HourDisplay]').css("display", "none");
        }

        function dataComSubCode() {
            var dropdownList = $('#ComSubType').data('kendoDropDownList');
            var comSubCode = dropdownList.value()
            var yearSelected = $('#selectYear').val();
            var monthSelected = $('#selectMonth').val();
            return ({
                comSubCode: comSubCode,
                year: yearSelected,
                month: monthSelected
            });
        };

        //show server errors if any
        function error_handler(e) {
            if (e.errors) {
                var message = '@Resources.Langues.Error: ';
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                bootbox.alert(message);
            }
        }

        function sync_handler(e) {
            this.read();
        }

        function dataYear() {
            var comSubCodeSelected = $('#ComSubType').val();
            return ({
                comSubCode: comSubCodeSelected
            });
        };

        function searchByYear() {
            var smpChargeGrid = $('#SMPChargeGrid').data('kendoGrid');
            var comSubCodeSelected = $("#ComSubType").val();
            $("#selectYear").data("kendoDropDownList").dataSource.read();
            var monthSelected = $('#selectMonth').val();
            var yearSelected = $('#selectYear').val();
            smpChargeGrid.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
        }

        function changeMonth() {
            var smpChargeGrid = $('#SMPChargeGrid').data('kendoGrid');
            var comSubCodeSelected = $("#ComSubType").val();
            $("#selectYear").data("kendoDropDownList").dataSource.read();
            var monthSelected = $('#selectMonth').val();
            var yearSelected = $('#selectYear').val();
            smpChargeGrid.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
        }
    </script>
}


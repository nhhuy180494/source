
@{
    ViewBag.Title = Resources.Langues.CulminationAltitudeManagement;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/FaqAndNotice.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/KendoGrid.css")" rel="stylesheet" type="text/css" />
    <style>
        .form-control {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }

        span[class=k-input] {
            text-align: center;
        }

        .k-list-optionlabel {
            text-align: center;
        }

        #copyModal {
            top: 5%;
        }

        .input-validation-error {
            border: 1px solid red !important;
        }
    </style>
}

<h2>@ViewBag.Title</h2>
<div class="container-fluid adminSiteContent onlyOneGrid">
    <div class="form-group">
        @(Html.Kendo().Grid<DPDSP.Models.CulminationAltitudeManagementViewModel>()
                                .Name("CulminationAltitudeGrid")
                                .Columns(columns =>
                                {
                                    columns.Bound(m => m.CulAltitudeId).Hidden();
                                    columns.Bound(member => member.LocationCode).Hidden().HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.LocationCode);
                                    columns.Bound(member => member.LocationName).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.ComSubName);
                                    columns.Bound(member => member.Year).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.Year);
                                    columns.Bound(member => member.Month).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.Month);
                            //columns.Bound(member => member.Day).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.Date);
                            //columns.Bound(member => member.Date).HtmlAttributes(new { style = "text-align:center;" }).Title("Date");
                            columns.Bound(member => member.Value).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.ValueCA).Format("{0:#,##}");
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);

                                    }).HtmlAttributes(new { style = "text-align:center;" });
                                })
                                .ToolBar(tools =>
                                {
                                    tools.Template(@<text>
                                        <div class="row">
                                            <div class="form-horizontal">
                                                <label class="col-xs-1 col-md-1 control-label">@Resources.Langues.Area </label>
                                                <div class="col-xs-1 col-md-1">
                                                    @(Html.Kendo().DropDownList()
                                                                                  .Name("Location")
                                                                                  .DataTextField("Text")
                                                                                  .DataValueField("Value")
                                                                                  .DataSource(source =>
                                                                                  {
                                                                                  source.Read(read =>
                                                                                  {
                                                                                      read.Action("GetCommonSubByComCode", "EntityE00001Popup", new { area = "Case" });
                                                                                  });
                                                                              })
                                                                                  .OptionLabel(Resources.Langues.AllSelect).HtmlAttributes(new { style = "text-align:center;" })
                                                    )
                                                </div>
                                            </div>

                                            <div class="form-horizontal">
                                                <label class="col-xs-1 col-md-1 control-label">@Resources.Langues.Year </label>
                                                <div class="col-xs-1 col-md-1">
                                                    @(Html.Kendo().DropDownList()
                                                                                .Name("YearDropList")
                                                                                .DataTextField("Text")
                                                                                .DataValueField("Value")
                                                                                .DataSource(source =>
                                                                                {
                                                                                source.Read(read =>
                                                                                {
                                                                                    read.Action("Read_SourceYear", "CulminationAltitudeManagement", new { area = "Admin" });
                                                                                });
                                                                            })
                                                                                .OptionLabel(Resources.Langues.AllSelect).HtmlAttributes(new { style = "text-align:center;" })
                                                    )
                                                </div>
                                            </div>
                                            <div class="form-horizontal">
                                                <label class="col-xs-1 col-md-1 control-label">@Resources.Langues.Month </label>
                                                <div class="col-xs-1 col-md-1">
                                                    @(Html.Kendo().DropDownList()
                                                              .Name("selectMonth")
                                                              .DataTextField("Text")
                                                              .DataValueField("Value")
                                                              .Events(e => e.Change("changeMonth"))
                                                              .BindTo(new List<SelectListItem>() {
                                                      new SelectListItem() {
                                                          Text = Resources.Langues.PleaseSelect,
                                                          Value = "-1"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "1",
                                                          Value = "1"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "2",
                                                          Value = "2"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "3",
                                                          Value = "3"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "4",
                                                          Value = "4"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "5",
                                                          Value = "5"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "6",
                                                          Value = "6"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "7",
                                                          Value = "7"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "8",
                                                          Value = "8"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "9",
                                                          Value = "9"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "10",
                                                          Value = "10"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "11",
                                                          Value = "11"
                                                      },
                                                      new SelectListItem() {
                                                          Text = "12",
                                                          Value = "12"
                                                      }
                                                          })
                                                              .Value("-1")
                                                              .HtmlAttributes(new { style = "width: 100%" })
                                                    )
                                                </div>
                                            </div>

                                            <div class="col-md-4" style="float:right;">
                                                <button data-target="#UploadFileForm" data-toggle="modal" class="k-button k-button-icontext pull-right"><span class="k-icon k-i-add"></span>@Resources.Langues.UploadForm</button>
                                                <button id="showCopyModal" class="k-button k-button-icontext pull-right">@Resources.Langues.YearCopy</button>
                                                @*<button id="export" disabled="disabled" class="k-button k-button-icontext k-grid-excel pull-right" type="button"><span class="k-icon k-i-excel"></span>@Resources.Langues.ExportToExcel</button>*@
                                                <button class="k-button k-button-icontext pull-right" onclick="NullDataLookup()"><span class="k-icon k-i-add"></span>@Resources.Langues.NullDataSearch</button>

                                            </div>
                                        </div>
                                    </text>);
                                    })
                                     .Excel(excel => excel
                                        .FileName("Culmination Altitude.xlsx")
                                        .Filterable(true)
                                        .AllPages(true)
                                        .ProxyURL(Url.Action("Excel_Export_Save", "CulminationAltitudeManagement", new { area = "Admin" }))
                                    )
                                    .Editable(editable => editable.Mode(GridEditMode.InLine))
                                    .Events(ev =>
                                    {
                                        ev.Edit("onEdit");
                                    })
                                    .Pageable()
                                    .Sortable()
                                    .Scrollable(rz => rz.Enabled(true))
                                    .Resizable(rz => rz.Columns(true))
                                    .HtmlAttributes(new { style = "height:700px;" })
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(48)
                                        .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                        .Model(model => { model.Id(p => p.CulAltitudeId); })
                                        .Read(read => read.Action("Read_CulminationAltitude", "CulminationAltitudeManagement").Data("dataYear"))
                                        .Update(update => update.Action("Update_CulminationAltitude", "CulminationAltitudeManagement"))
                                )
        )
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="copyModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Resources.Langues.YearCopy</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-md-3 control-label">@Resources.Langues.SourceYear </label>
                        <div class="col-md-9">
                            <select class="form-control toolbarInput" id="sourceYearCopy" name=""></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">@Resources.Langues.TargetYear </label>
                        <div class="col-md-9">
                            <select data-val="true" , dat-val-required="The Target year is required." class="form-control toolbarInput" id="targetYearCopy" name=""></select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="runCopy" class="btn btn-primary">@Resources.Langues.Run</button>
                <button type="button" class="btn btn-gray" data-dismiss="modal">@Resources.Langues.Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popup" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true" style="z-index:10000">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="printDiv">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div>
                @(Html.Kendo().Grid<DPDSP.Models.CulminationAltitudeNullData>().Name("GridNull")
                                .Columns(columns =>
                                {
                                    columns.Bound(m => m.LocationCode).Title(Resources.Langues.LocationCode).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(m => m.Year).Title(Resources.Langues.YearDate).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(m => m.Month).Title(Resources.Langues.Month).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(m => m.Value).Title(Resources.Langues.ValueCA).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel).HtmlAttributes(new { style = "text-align:center;" });
                                    }).HtmlAttributes(new { style = "text-align:center;" });
                                })
                                .Editable(editable => editable.Mode(GridEditMode.InLine))
                                .Pageable()
                                .Sortable()
                                .Scrollable(rz => rz.Enabled(false))
                                .Resizable(rz => rz.Columns(true))
                                .HtmlAttributes(new { style = "height:auto;" })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Events(events => events.Error("error_handler"))
                                    .Model(model => { model.Id(p => p.Id); })
                                    .Read(read => read.Action("Read_CulminationAltitudeNullData", "CulminationAltitudeManagement", new { area = "Admin" })/*.Data("onDataRead")*/)
                                    .Update(update => update.Action("Update_WindSpeedNull", "WindSpeedManagement", new { area = "Admin" }))
                                )
                )
            </div>
            <div class="modal-footer" style="border-top:none;">
                <button class="btn btn-default " onclick="SaveDataNullChange()" data-dismiss="modal">@Resources.Langues.Save</button>
                <button class="btn btn-default " data-dismiss="modal">@Resources.Langues.Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="UploadFileForm" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Import Excel Modal</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("ExcelRegistCulminationAltitude", "CulminationAltitudeManagement", FormMethod.Post, new { @role = "form", @id = "ManualForm", @enctype = "multipart/form-data" }))
                {
                    @*<form method="post" action="@Url.Action("ImportIntoDb", "WindSpeedManagement", new { area = "Admin" })">*@
                    <div class="demo-section k-content">
                        @Html.Kendo().Upload().Name("File").HtmlAttributes(new { aria_label = "files" })
                        <p style="padding-top: 1em; text-align: right">
                            <a type="button" class="k-button k-primary" href="~/Content/AddExcelRegistForm/CulminationAltitudeForm.csv">Sample Form</a>
                            <button type="submit" class="k-button k-primary">Submit</button>
                        </p>
                    </div>
                    @*</form>*@
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var $manualForm = $('#ManualForm');
        $(document).ready(function () {
            var $copyModal = $('#copyModal');
            var culminationGrid = $('#CulminationAltitudeGrid').data('kendoGrid');
            var dropdownList = $('#YearDropList').data('kendoDropDownList');

            $("#YearDropList").change(function () {
                culminationGrid.dataSource.read({ year: $('#YearDropList').val(), locationCode: $('#Location').val(),month: $('#selectMonth').val() });
                if ($(this).val() === "") {
                    $('#export').attr("disabled", "disabled");
                    //$('#showCopyModal').attr("disabled", "disabled");
                } else {
                    $('#export').removeAttr("disabled");
                    //$('#showCopyModal').removeAttr("disabled");
                }
            });

            $("#Location").change(function () {
                culminationGrid.dataSource.read({ locationCode: $('#Location').val(), year: $('#YearDropList').val(), month: $('#selectMonth').val() });
                if ($(this).val() === "") {
                    $('#export').attr("disabled", "disabled");
                    //$('#showCopyModal').attr("disabled", "disabled");
                } else {
                    $('#export').removeAttr("disabled");
                    //$('#showCopyModal').removeAttr("disabled");
                }
            });

            $('#runCopy').click(function () {
                $copyModal.modal('hide');
                $.blockUI();
                var sourceYearCopy = $('#sourceYearCopy').val();
                var targetYearCopy = $('#targetYearCopy').val();
                $.post('@Url.Action("CopyCulminationAltitude", "CulminationAltitudeManagement", new { area="Admin" })',
                    { @*year: year, *@ targetYear: targetYearCopy, sourceYear: sourceYearCopy },
                    function (result) {
                        if (result.success) {
                            if (result.insert) {
                                bootbox.alert('Inserted successfully!');
                                dropdownList.dataSource.read();
                            } else {
                                bootbox.alert('Updated successfully!');
                            }
                            culminationGrid.dataSource.read(dataYear());
                        } else {
                            if (result.message) {
                                bootbox.alert(result.message);
                            }
                        }
                    }).fail(function () {
                        bootbox.alert('@Resources.Langues.ContactAdmin');
                    }).always(function () {
                        $.unblockUI();
                    })
            });

            $('#showCopyModal').click(function () {
                $copyModal.modal('show');
            });

            $copyModal.on('show.bs.modal', function () {
                var year = dropdownList.value();
                clearCopySelect();
                $.blockUI();
                $.post("@Url.Action("GetSourceYear", "CulminationAltitudeManagement", new { area = "Admin" })", { year: year }, function (result) {
                    if (result.success) {
                        if (result.listSourceYear.length !== 0) {
                            var listYear = result.listSourceYear;
                            listYear.forEach(function (item) {
                                $("<option/>", {
                                    value: item.Value,
                                    text: item.Text
                                }).appendTo($('#sourceYearCopy'));
                            });
                            var beginYear = parseInt(listYear[0].Value) + 1;
                            var futureYear = beginYear + 5;
                            for (var year = beginYear; year <= futureYear; year++) {
                                $('<option/>', { value: year, text: year }).appendTo($('#targetYearCopy'))
                            }
                        }
                    }
                }).fail(function () {
                    bootbox.alert('@Resources.Langues.ContactAdmin');
                }).always(function () {
                    $.unblockUI();
                });
            });

            $('#sourceYearCopy').change(function () {
                $('#targetYearCopy').empty();
                var beginYear = parseInt($(this).val()) + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearCopy'))
                }
            });

            $('#sourceYearUpload').change(function () {
                $('#targetYearUpload').empty()
                var beginYear = parseInt($(this).val()) + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                }
            });

            $('#targetYearUpload').change(function () {
                if ($(this).val()) {
                    $('#targetYearUpload').removeClass('input-validation-error');
                }
            });

            $('#sourceYearUpload').change(function () {
                var beginYear = this.val() + 1;
                var futureYear = beginYear + 5;
                for (var year = beginYear; year <= futureYear; year++) {
                    $('<option/>', { value: year, text: year }).appendTo($('#targetYearUpload'))
                }
            });

            @*$("#CulminationYearDropdownList").kendoDropDownList({
                dataValueField: "Value",
                dataTextField: "Text",
                serverFiltering: true,
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "@Url.Action("Read_YearList", "CulminationAltitudeManagement")"
                        }
                    }
                }
            });*@

            $manualForm.on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });

        });

        function changeMonth() {
            $('#CulminationAltitudeGrid').data('kendoGrid').dataSource.read({ year: $('#YearDropList').val(), locationCode: $('#Location').val(), month: $('#selectMonth').val() });
        };

        function clearCopySelect() {
            $('#targetYearCopy').empty();
            $('#sourceYearCopy').empty();
        }

        $manualForm.submit(function (e) {
            $.blockUI();
            var data = new FormData(this);
            var $fromObj = $(this);
            var urlAction = $fromObj.attr('action');
            $.ajax({
                url: urlAction,
                cache: false,
                type: 'POST',
                dataType: "Json",
                contentType: false,
                cache: false,
                processData: false,
                data: data,
                fail: function () {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.ContactAdmin');
                }
            }).always(function () {
                //$.unblockUI();
            }).success(function (result) {
                if (result.success) {
                    $.unblockUI();
                    $('#UploadFileForm').modal("hide")
                    bootbox.alert("@Resources.Langues.Successful");
                } else {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.Pleasecheckyourdataagain');
                }
            });
            e.preventDefault();
        });

        function onEdit(e) {
            $(e.container).find('input[name=Year]').attr("readonly", "readonly");
            var month = e.model.Month;
            $("#CulminationMonthDropdownList").kendoDropDownList({
                dataValueField: "Value",
                dataTextField: "Text",
                serverFiltering: true,
                filter: "contains",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: "@Url.Action("Read_MonthList", "CulminationAltitudeManagement", new { area= "Admin" })"
                        }
                    }
                }
            });
            $("#CulminationMonthDropdownList").data("kendoDropDownList").value(month);
        }

        function dataYear() {
            var month = $('#selectMonth').val();
            var dropdownList = $('#YearDropList').data('kendoDropDownList');
            var year = dropdownList.value()
            var locationCode = $('#Location').data('kendoDropDownList').value();
            return ({
                year: year,
                locationCode: locationCode,
                month: month
            });
        };

        //show server errors if any
        function error_handler(e) {
            if (e.errors) {
                var message = '@Resources.Langues.Error: ';
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                bootbox.alert(message);
            }
        }

        function sync_handler(e) {
            this.read();
        }

        function NullDataLookup() {
            var $ComSubCode = $('#Location').data('kendoDropDownList').value();
            var $year = $('#YearDropList').data('kendoDropDownList').value();
            if ($ComSubCode != "" && $year != "") {
                var originGridURL = '@Url.Action("Read_CulminationAltitudeNullData", "CulminationAltitudeManagement", new { area = "Admin"})'
                var url = originGridURL + "?locationCode=" + $ComSubCode + "&year=" + $year;
                $('#GridNull').data('kendoGrid').dataSource.transport.options.read.url = url;
                $('#GridNull').data('kendoGrid').dataSource.read();
                $('#popup').modal("show")
            } else {
                bootbox.alert('please check comCode and year');
            }
        }

        function SaveDataNullChange() {
            var data = $("#GridNull").data("kendoGrid").dataSource.data();
            var lst = [];
            data.forEach(function (item) {
                lst.push(item)
            })
            var abc = JSON.stringify(lst);
            $.blockUI();
            $.post('@Url.Action("Update_CulminationAltitudeNull", "CulminationAltitudeManagement")', { data: abc },
                function (result) {
                    console.log(result.success)
                    $.unblockUI();
                    if (result.success == true) {
                        $('#CulminationAltitudeGrid').data('kendoGrid').dataSource.read();
                        bootbox.alert("@Resources.Langues.Successful");
                    } else {
                        bootbox.alert("@Resources.Langues.Error");
                    }
                }).fail(function () {
                    $.unblockUI();
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    //$.unblockUI();
                });
        }

    </script>
}



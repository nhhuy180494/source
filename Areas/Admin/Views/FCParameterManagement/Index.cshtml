
@{
    ViewBag.Title = Resources.Langues.FCParameterManagement;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/KendoGrid.css")" rel="stylesheet" type="text/css" />
    <style>
        .displayModelCode {
            font-size: 20px;
        }

        input[type="checkbox"][readonly] {
            pointer-events: none;
        }
    </style>
}

<h2>@ViewBag.Title</h2>

<div class="container-fluid adminSiteContent">
    <div class="form-group">
        <div class="col-md-12 col-lg-6">
            <div class="form-group">
                @(Html.Kendo().Grid<DPDSP.Models.FcParameterViewModel>()
            .Name("FCParameterGrid")
            .Columns(columns =>
            {
                columns.Bound(p => p.Company).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.Company);
                columns.Bound(p => p.ModelName).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.ModelName);
                //columns.Bound(p => p.ModelNameEng).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.ModelName + " (Eng)");
                columns.Bound(p => p.Volume).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.FcParamVolumn).Format("{0:n2}");
                //columns.Bound(p => p.FuelPrice).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.FuelPrice).Format("{0:n2}");
                columns.Bound(p => p.FullUserName).HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.FullUserName);
                columns.Bound(p => p.HowReg).ClientTemplate("#=HowReg ? 'Admin' : 'User' #").HtmlAttributes(new { style = "text-align:center;" }).Title(Resources.Langues.HowReg);
                columns.Bound(p => p.FcParameterId).Hidden();
                columns.Command(command =>
                {
                    command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);
                    command.Custom(Resources.Langues.Delete).Click("deleteFCParameter").HtmlAttributes(new { @class = "btn-danger" });
                })/*.Title("Management")*/.HtmlAttributes(new { style = "text-align:center;" }).Width(200);
            })
            .ToolBar(toolbar =>
            {
                toolbar.Template(@<text>
                    <div class="form-group">
                        <div class="col-md-7">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon btn-opal"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control boder-opal" id='parameterFilter' placeholder="제품명">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default btn-opal" id="resetParameterGrid" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group pull-right">
                            <a class="k-button k-button-icontext k-grid-add" href="/Admin/FCParameterManagement/Read_FCParameter?FCParameterGrid-mode=insert"><span class="k-icon k-i-add"></span>@Resources.Langues.AddNewRecord</a>
                        </div>
                    </div>
                </text>);
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        .Sortable()
        .Scrollable(rz => rz.Enabled(true))
        .HtmlAttributes(new { style = "height:650px;" })
        .Selectable(selectable => selectable
              .Mode(GridSelectionMode.Multiple)
              .Type(GridSelectionType.Row))
        .Events(ev =>
        {
            ev.Change("onChange");
            ev.Edit("onEdit");
            ev.DataBound("onDataBound");
        })
        .Resizable(rz => rz.Columns(true))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Events(events => events.Error("error_handler").Sync("sync_handler"))
            .Model(model => { model.Id(p => p.FcParameterId); })
        .Read(read => read.Action("Read_FCParameter", "FCParameterManagement"))
        .Create(update => update.Action("Create_FCParameter", "FCParameterManagement"))
           .Update(update => update.Action("Update_FCParameter", "FCParameterManagement"))
        )
                )
            </div>
        </div>
        <div class="col-md-12 col-lg-6">
            <div class="form-group">
                <div class="form-inline" style="padding:20px;">
                    <label class="form-group displayModelCode">@Resources.Langues.ModelSelection</label>
                    <p class="form-group displayModelCode" id="ParameterSelected"></p>
                    @Html.Hidden("ParameterSelectedId")
                </div>
                <div class="row">
                    @(Html.Kendo().Grid<DPDSP.Models.FcParameterSubViewModel>()
                            .Name("FCParameterSubGrid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.Load).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.Load).Format("{0:n2}");
                                columns.Bound(p => p.ElectricOutput).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.ElectricOutput).Format("{0:n2}");
                                columns.Bound(p => p.Heat).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.Heat).Format("{0:n2}");
                                columns.Bound(p => p.FuelInput).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.FuelInput).Format("{0:n2}");
                                columns.Bound(p => p.FcParameterSubId).Hidden();
                                columns.Command(command =>
                                {
                                    command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);
                                    command.Custom(Resources.Langues.Delete).Click("deleteParameterSub").HtmlAttributes(new { @class = "btn-danger" });
                                }).HtmlAttributes(new { style = "text-align:center;" }).Width(200);
                            })
                            .ToolBar(toolbar =>
                            {
                                toolbar.Create().Text(Resources.Langues.AddNewRecord).HtmlAttributes(new { @class = "pull-right" });
                            })
                            //.Editable(editable => editable.Mode(GridEditMode.InLine))
                            .Pageable()
                            .Sortable()
                            .Scrollable()
                                //.HtmlAttributes(new { style = "height:600px;" })
                                .Resizable(rz => rz.Columns(true))
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(20)
                                            .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                            .Model(model => { model.Id(p => p.FcParameterSubId); })
                                            .Read(read => read.Action("Read_FCParameterSub", "FCParameterManagement").Data("dataParameter"))
                                            .Create(update => update.Action("Create_FCParameterSub", "FCParameterManagement").Data("dataParameter"))
                                            .Update(update => update.Action("Update_FCParameterSub", "FCParameterManagement").Data("dataParameter"))
                                            //.Destroy(update => update.Action("DestroyModelMap", "ModelManagement"))
                                            )
                    )
                </div>

                <br />
                <div class="row">
                    @(Html.Kendo().Grid<DPDSP.Models.FCMonthViewModel>()
                                .Name("FcMonthGrid")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.FCMonthId).Hidden();
                                    columns.Bound(p => p.Month).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.Month).Width(60);
                                    columns.Bound(p => p.FuelCost).HtmlAttributes(new { style = "text-align:right;" }).Title(Resources.Langues.Price + " [" + Resources.Langues.won + "/MJ]").Format("{0:n2}").Width(100);
                                    columns.Command(command =>
                                    {
                                        command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);
                                    }).HtmlAttributes(new { style = "text-align:center;" }).Width(100);
                                })
                                .Editable(editable => editable.Mode(GridEditMode.InLine))
                                .Pageable(p => p.Enabled(false))
                                .HtmlAttributes(new { style = "height:100%;" })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Events(events => events.Error("error_handler").Sync("sync_handler"))
                                    .Model(model =>
                                    {
                                        model.Id(p => p.FCMonthId);
                                        model.Field(r => r.Month).Editable(false);
                                    })
                                    .Read(read => read.Action("Read_FcMonth", "FCParameterManagement").Data("dataParameter"))
                                    .Update(update => update.Action("Update_FCMonth", "FCParameterManagement"))
                                    )
                    )
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        $(document).ready(function () {
            var parameterGrid = $("#FCParameterGrid").data("kendoGrid");

            $("#parameterFilter").keyup(function () {
                var value = $("#parameterFilter").val();
                if (value) {
                    parameterGrid.dataSource.filter({ field: "ModelName", operator: "contains", value: value });
                } else {
                    parameterGrid.dataSource.filter({});
                }
            });

            $('#resetParameterGrid').click(function () {
                $('#parameterFilter').val('');
                parameterGrid.dataSource.filter({});
            });
        });

        function deleteParameterSub(e) {
            var parameterSubGrid = $("#FCParameterSubGrid").data("kendoGrid");
            var dataItem = parameterSubGrid.dataItem($(e.currentTarget).closest("tr"));
            var parameterId = $("#ParameterSelectedId").val();
            bootbox.confirm({
                message: '@Resources.Langues.AreYouSure',
                buttons: {
                    cancel: {
                        label: '@Resources.Langues.No',
                    }, confirm: {
                        label: '@Resources.Langues.Yes',
                        className: 'btn-success'
                    }
                },
                callback: function (callback) {
                    if (callback) {
                        $.blockUI();
                        $.post('@Url.Action("Destroy_ParameterSub", "FCParameterManagement")', { fcParameterId: parameterId, fcParameterSubId: dataItem.FcParameterSubId },
                        function (result) {
                            if (result) {
                                parameterSubGrid.dataSource.read({ parameterId: parameterId });
                            }
                        }).fail(function () {
                            bootbox.alert('@Resources.Langues.ContactAdmin');
                        }).always(function () {
                            $.unblockUI();
                        })
                    }
                }
            });
        }

        function dataParameter() {
            var fcParameterId = $("#ParameterSelectedId").val();
            return {
                fcParameterId: fcParameterId
            };
        }

        function deleteFCParameter(e) {
            var parameterSubGrid = $("#FCParameterSubGrid").data("kendoGrid");
            var parameterGrid = $("#FCParameterGrid").data("kendoGrid");
            var dataItem = parameterGrid.dataItem($(e.currentTarget).closest("tr"))
            bootbox.confirm({
                message: '@Resources.Langues.AreYouSure',
                buttons: {
                    cancel: {
                        label: '@Resources.Langues.No',
                    }, confirm: {
                        label: '@Resources.Langues.Yes',
                        className: 'btn-success'
                    }
                },
                callback: function (callback) {
                    if (callback) {
                        $.blockUI();
                        $.post('@Url.Action("Destroy_Parameter", "FCParameterManagement")', { fcParameterId: dataItem.FcParameterId },
                        function (result) {
                            if (result) {
                                $("#ParameterSelected").text("");
                                parameterGrid.dataSource.read();
                                parameterSubGrid.dataSource.read(dataParameter());
                            }
                        }).fail(function () {
                            bootbox.alert('@Resources.Langues.ContactAdmin');
                        }).always(function () {
                            $.unblockUI();
                        })
                    }
                }
            });
        }

        function onDataBound(e) {
            var fcParameterGrid = $("#FCParameterGrid").data("kendoGrid");
            var row = fcParameterGrid.tbody.find("tr[role='row']:first");
            if (row != null) {
                fcParameterGrid.select(e.sender.tbody.find("tr:first"));
            }
        }

        function onChange(e) {
            var parameterGrid = $("#FCParameterGrid").data("kendoGrid");
            var parameterSubGrid = $("#FCParameterSubGrid").data("kendoGrid");
            var fcMonthGrid = $("#FcMonthGrid").data("kendoGrid");
            var parameterSelected = parameterGrid.dataItem(parameterGrid.select());
            var modelName = parameterSelected.ModelName;
            var fcParameterId = parameterSelected.FcParameterId;
            $('#ParameterSelected').text(modelName);
            $('#ParameterSelectedId').val(fcParameterId);
            parameterSubGrid.dataSource.read({ fcParameterId: fcParameterId });
            fcMonthGrid.dataSource.read({ fcParameterId: fcParameterId });
        }

        function onEdit(e) {
            if (e.model.isNew() == false) {
                $(e.container).find('input[name=FullUserName]').prop("readonly", true);
                $(e.container).find('input[name=HowReg]').prop("readonly", true);
            }
            else {
                $(e.container).find('input[name=FullUserName]').css("display", "none");
                $(e.container).find('input[name=HowReg]').css("display", "none");
            }
        }

        //show server errors if any
        function error_handler(e) {
            if (e.errors) {
                var message = '@Resources.Langues.Error: ';
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                           message += this + "\n";
                        });
                    }
                });
                bootbox.alert(message);
            }
        }

        function sync_handler(e) {
            this.read();
        }
    </script>
}







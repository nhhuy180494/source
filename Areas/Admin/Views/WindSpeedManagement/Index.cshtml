@model DPDSP.Models.EditAccountViewModel

@{
    ViewBag.Title = Resources.Langues.WindSpeed1;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


@section styles{
    <link href="@Url.Content("~/Content/FaqAndNotice.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/KendoGrid.css")" rel="stylesheet" type="text/css" />
    <style>
        #SerchButton {
            margin-top: 20px;
            margin-left: 20px;
        }

        .input-validation-error {
            border: 1px solid red !important;
        }

        .form-control {
            display: block;
            width: 100%;
            height: 34px;
            padding: 6px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            background-color: #fff;
            background-image: none;
            border: 1px solid #ccc;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }

        .modal-dialog1 {
            width: 70%;
        }
    </style>
}

<script>
    function onData() {
        var filter = $('.k-textbox').val();
        return { filter: filter };
    }
</script>

<h2>@ViewBag.Title</h2>
@*@using (Html.BeginForm("SaveEntityE00010ManualData", "WindSpeedManagement", FormMethod.Post, new { @role = "form", @id = "ManualForm", @enctype = "multipart/form-data" }))
    {*@
<div class="container-fluid adminSiteContent onlyOneGrid">
    <div class="form-group">
        @(Html.Kendo().Grid<DPDSP.Models.WindSpeedViewModel>().Name("grid")
                        .Columns(columns =>
                        {
                            columns.Bound(m => m.CommnonSubName).Title(Resources.Langues.ComSubName).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.YearDate).Title(Resources.Langues.YearDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.DayDate).Title(Resources.Langues.MonthDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.HourDate).Title(Resources.Langues.HourDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.Height).Title(Resources.Langues.WindSpeedHeight).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:#,##}");
                            columns.Bound(m => m.Windspeed).Title(Resources.Langues.WindSpeedTextInGrid).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                            columns.Bound(m => m.WindSpeedId).Hidden();
                            columns.Command(command =>
                            {
                                command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel);
                                command.Custom(Resources.Langues.Delete).Click("DeleteWindSpeed").HtmlAttributes(new { @class = "btn-danger" });
                            });
                        })
                        .ToolBar(tools =>
                        {
                        //tools.Excel();
                        tools.Template(@<text>
                                <div class="row">
                                    <div class="col-md-2 col-lg-2">
                                        @Resources.Langues.Area @(Html.Kendo().DropDownList()
                                                   .Name("AllComSubCode")
                                                   .DataTextField("Text")
                                                   .DataValueField("Value")
                                                   .Filter(FilterType.Contains)
                                                   .DataSource(source =>
                                                   {
                                                       source.Read(read =>
                                                       {
                                                           read.Action("ReadAllComSubCode", "WindSpeedManagement", new { area = "Admin" }).Data("onData");
                                                       });
                                                   }).OptionLabel("---All---")
                                                   .Events(ev => ev.Change("SearchByComSubCode"))
                                        )

                                    </div>
                                    <div class="col-md-2 col-lg-2">
                                        @Resources.Langues.Year @(Html.Kendo().DropDownList()
                    .Name("selectYear")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetYearByCommSubCode", "WindSpeedManagement", new { area = "Admin" }).Data("dataYear");
                        });
                    }).OptionLabel(Resources.Langues.PleaseSelect)
                    .Events(ev => ev.Change("searchByYear"))
                                        )
                                    </div>
                                    <div class="col-md-2 col-lg-2">
                                        @Resources.Langues.Month @(Html.Kendo().DropDownList()
                     .Name("selectMonth")
                     .DataTextField("Text")
                     .DataValueField("Value")
                     .Events(e => e.Change("changeMonth"))
                     .BindTo(new List<SelectListItem>() {
                         new SelectListItem() {
                             Text = Resources.Langues.PleaseSelect,
                             Value = "-1"
                         },
                         new SelectListItem() {
                             Text = "1",
                             Value = "1"
                         },
                         new SelectListItem() {
                             Text = "2",
                             Value = "2"
                         },
                         new SelectListItem() {
                             Text = "3",
                             Value = "3"
                         },
                         new SelectListItem() {
                             Text = "4",
                             Value = "4"
                         },
                         new SelectListItem() {
                             Text = "5",
                             Value = "5"
                         },
                         new SelectListItem() {
                             Text = "6",
                             Value = "6"
                         },
                         new SelectListItem() {
                             Text = "7",
                             Value = "7"
                         },
                         new SelectListItem() {
                             Text = "8",
                             Value = "8"
                         },
                         new SelectListItem() {
                             Text = "9",
                             Value = "9"
                         },
                         new SelectListItem() {
                             Text = "10",
                             Value = "10"
                         },
                         new SelectListItem() {
                             Text = "11",
                             Value = "11"
                         },
                         new SelectListItem() {
                             Text = "12",
                             Value = "12"
                         }
                     })
                     .Value("-1")
                                        )
                                    </div>
                                    <div class="col-md-5" style="float:right;">
                                        @*<button class="k-button k-button-icontext pull-right" onclick="ExportToExcel()"><span class="k-icon k-i-add"></span>@Resources.Langues.DownloadForm</button>*@
                                        <button data-target="#UploadFileForm" data-toggle="modal" class="k-button k-button-icontext pull-right"><span class="k-icon k-i-add"></span>@Resources.Langues.UploadForm</button>
                                        <button data-toggle="modal" id="yearCopy" data-target="#YearCopyModal" class="k-button k-button-icontext pull-right"><span class="k-icon k-i-add"></span>@Resources.Langues.YearCopy</button>
                                        <button class="k-button k-button-icontext pull-right" onclick="NullDataLookup()">@Resources.Langues.NullDataSearch</button>
                                    </div>
                                </div>
                        </text>);
                 })
                 .Editable(editable => editable.Mode(GridEditMode.InLine))
                 .Pageable()
                 .Sortable()
                 .Scrollable(rz => rz.Enabled(true))
                 .Events(ev =>
                 {
                     ev.Edit("onEdit");
                 })
                 .Resizable(rz => rz.Columns(true))
                 .HtmlAttributes(new { style = "height:700px;" })
                 .DataSource(dataSource => dataSource
                     .Ajax()
                     .PageSize(48)
                     .Model(model => { model.Id(p => p.WindSpeedId); })
                     .Read(read => read.Action("Read", "WindSpeedManagement", new { area = "Admin" }).Data("onDataRead"))
                     .Update(update => update.Action("Update_WindSpeed", "WindSpeedManagement", new { area = "Admin" }))
                 //.Events(e => e.Sync("OnCRUD"))
                 )
        )
    </div>
</div>
@*}*@

<!-- Modal -->
<div class="modal fade" id="YearCopyModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Resources.Langues.YearCopy</h4>
            </div>
            <div class="modal-body">
                <div id="formYearCopy" class="col-lg-offset-2 col-md-offset-2 col-xs-offset-2">
                    <div class="form-group">
                        <label class="control-label">@Resources.Langues.SourceYear </label>
                        <select class="form-control toolbarInput" id="sourceYear" name="sourceYear"></select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">@Resources.Langues.TargetYear </label>
                        <select class="form-control toolbarInput" id="targetYear" name="targetYear"></select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="list-inline">
                    <button type="button" id="runCopy" class="btn btn-default">Run</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="UploadFileForm" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Import Excel Modal</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("ExcelRegistWindSpeed", "WindSpeedManagement", FormMethod.Post, new { @role = "form", @id = "ManualForm", @enctype = "multipart/form-data" }))
                {
                    @*<form method="post" action="@Url.Action("ImportIntoDb", "WindSpeedManagement", new { area = "Admin" })">*@
                    <div class="demo-section k-content">
                        @Html.Kendo().Upload().Name("File").HtmlAttributes(new { aria_label = "files" })
                        <p style="padding-top: 1em; text-align: right">
                            <a type="button" class="k-button k-primary" href="~/Content/AddExcelRegistForm/WindSpeedForm.csv">Sample Form</a>
                            <button type="submit" class="k-button k-primary">Submit</button>
                        </p>
                    </div>
                    @*</form>*@
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popup" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true" style="z-index:10000">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="printDiv">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div>
                @(Html.Kendo().Grid<DPDSP.Models.WindSpeedNullData>().Name("GridNull")
                        .Columns(columns =>
                        {
                            columns.Bound(m => m.LocationCode).Title(Resources.Langues.ComSubName).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.Year).Title(Resources.Langues.YearDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.MonthDay).Title(Resources.Langues.MonthDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.Hour).Title(Resources.Langues.HourDate).HtmlAttributes(new { style = "text-align:center;" });
                            columns.Bound(m => m.Windspeed).Title(Resources.Langues.WindSpeedTextInGrid).HtmlAttributes(new { style = "text-align:right;" }).Format("{0:n1}");
                            columns.Command(command =>
                            {
                                command.Edit().Text(Resources.Langues.Edit).UpdateText(Resources.Langues.Update).CancelText(Resources.Langues.Cancel).HtmlAttributes(new { style = "text-align:center;" });
                            }).HtmlAttributes(new { style = "text-align:center;" });
                        })
                        .Editable(editable => editable.Mode(GridEditMode.InLine))
                        .Pageable()
                        .Sortable()
                        .Scrollable(rz => rz.Enabled(false))
                        .Resizable(rz => rz.Columns(true))
                        .HtmlAttributes(new { style = "height:auto;" })
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(31)
                            .Events(events => events.Error("error_handler"))
                            .Model(model => { model.Id(p => p.Id); })
                            .Read(read => read.Action("ReadNullData", "WindSpeedManagement", new { area = "Admin" }).Data("onDataRead"))
                            .Update(update => update.Action("Update_WindSpeedNull", "WindSpeedManagement", new { area = "Admin" }))
                        )
                )
            </div>
            <div class="modal-footer" style="border-top:none;">
                <button class="btn btn-default " onclick="SaveDataNullChange()" data-dismiss="modal">@Resources.Langues.Save</button>
                <button class="btn btn-default " data-dismiss="modal">@Resources.Langues.Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var $manualForm = $('#ManualForm');
        $(document).ready(function () {
            //$("#grid").data("kendoGrid").dataSource.transport.options.read.data = OnReadGrid;

            //function OnReadGrid(e) {
            //    $("#AllComSubCode").data("kendoDropDownList").dataSource.read();
            //}
            $('.k-textbox').unbind();
            $('#YearCopyModal').on('show.bs.modal', function (e) {
                $.ajax({
                    url: '@Url.Action("GetYearsCopy", "WindSpeedManagement")',
                    type: 'GET',
                    data: {
                        comSubCode: $('#AllComSubCode').val()
                    },
                    success: function (result) {
                        if (result != null) {
                            for (var i = 0; i < result.length; i++) {
                                $('<option/>', { value: result[i].Value, text: result[i].Text }).appendTo('#sourceYear');
                            }

                            var sourceYear = new Date().getFullYear() - 1;
                            for (var i = 0; i < 5; i++) {
                                var srcYear = parseInt(sourceYear);
                                $('<option/>', { value: (srcYear + i + 1), text: (srcYear + i + 1) }).appendTo($('#targetYear'))
                            }
                        }
                    },
                    error: function (response) {
                    }
                });
            });

            $manualForm.on('keyup keypress', function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
            });

            $('#sourceYear').change(function () {
                var sourceYear = $('#sourceYear').val();
                $('#targetYear').empty();
                for (var i = 0; i < 5; i++) {
                    var srcYear = parseInt(sourceYear);
                    $('<option/>', { value: (srcYear + i + 1), text: (srcYear + i + 1) }).appendTo($('#targetYear'))
                }
            });

            $('#YearCopyModal').on('hidden.bs.modal', function (e) {
                $('#sourceYear').empty();
                $('#targetYear').empty();
            });

            $('#runCopy').click(function () {
                $.blockUI();
                $('#YearCopyModal').modal('hide');
                var $fromYear = $('#sourceYear').val();
                var $toYear = $('#targetYear').val();
                var $LocCode = $('#AllComSubCode').val();

                $.ajax({
                    url: "@Url.Action("RunCopyYear", "WindSpeedManagement", new { area = "Admin"})",
                    type: "POST",
                    data: {
                        fromYear: $fromYear, toYear: $toYear, comSubCode: $LocCode
                    },
                    success: function (result) {
                        if (result.success) {
                            //$("#grid").data("kendoGrid").dataSource.read();
                            //$('<option/>', { value: $toYear, text: $toYear }).appendTo($('select#selectYear'));
                            $("#selectYear").data("kendoDropDownList").dataSource.read({ comSubCode: $('#AllComSubCode').val() });
                            bootbox.alert('Inserted successfully!');
                        } else {
                            if (result.message) {
                                bootbox.alert(result.message);
                            }
                        }
                    }
                }).error(function () {
                    $.unblockUI();
                }).always(function () {
                    $.unblockUI();
                })

            });
        });

        function searchByYear() {
            var $WindSpeed = $("#grid").data("kendoGrid");
            var comSubCodeSelected = $('#AllComSubCode').val();
            var yearSelected = $('#selectYear').val();
            var monthSelected = $('#selectMonth').val();
            $WindSpeed.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
        };

        function changeMonth() {
            var $WindSpeed = $("#grid").data("kendoGrid");
            var comSubCodeSelected = $('#AllComSubCode').val();
            var yearSelected = $('#selectYear').val();
            var monthSelected = $('#selectMonth').val();
            $WindSpeed.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
        };

        function SearchByComSubCode() {
            var $WindSpeed = $("#grid").data("kendoGrid");
            var comSubCodeSelected = $('#AllComSubCode').val();
            $("#selectYear").data("kendoDropDownList").dataSource.read();
            var yearSelected = $('#selectYear').val();
            var monthSelected = $('#selectMonth').val();
            $WindSpeed.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected });
            @*$('select#selectYear').empty();
            $("<option/>", {
                value: "-1",
                text: "@Resources.Langues.PleaseSelect"
            }).appendTo($('select#selectYear'));

            callFunctionSearch($WindSpeed, comSubCodeSelected, yearSelected);*@
            //$WindSpeed.dataSource.read({ ComSubCode: comSubCodeSelected });
        }

        @*function callFunctionSearch($WindSpeed, comSubCodeSelected, yearSelected) {
            $.blockUI();
            $.post('@Url.Action("GetYearByCommSubCode", "WindSpeedManagement")', { comSubCode: comSubCodeSelected },
            function (result) {
                if (result.success) {
                    $('select#selectYear').html('');
                    $.each(result.listYear, function () {
                        $("<option/>", {
                            value: this.Text,
                            text: this.Value
                        }).appendTo($('select#selectYear'));
                    })
                    $('#search').removeAttr('disabled');
                    $("select#selectYear").removeAttr('disabled')

                    comSubCodeSelected = $('#AllComSubCode').val();
                    yearSelected = $('select#selectYear').val();
                    $WindSpeed.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected });

                    $('#yearCopy').removeAttr('disabled');
                } else {
                    $('#search').prop('disabled', 'disabled');
                    $('#select#selectYear').prop('disabled', 'disabled');
                    $('#yearCopy').attr('disabled', 'disabled');
                    comSubCodeSelected = $('#AllComSubCode', this).val();
                    yearSelected = $('select#selectYear').val();
                    $WindSpeed.dataSource.read({ comSubCode: comSubCodeSelected, year: yearSelected });
                }
            }).fail(function () {
                bootbox.alert('@Resources.Langues.ContactAdmin');
            }).always(function () {
                $.unblockUI();
            })
        }*@

        function ExportToExcel() {
            var $ComSubCode = $('#AllComSubCode').val();
            var $year = $('#selectYear').val();
            var originGridURL = '@Url.Action("WindSpeed", "WindSpeedManagement", new { area = "Admin"})'
            var url = originGridURL + "?comSubCode=" + $ComSubCode + "&year=" + $year;
            window.location = url
        }

        function NullDataLookup() {
            var $ComSubCode = $('#AllComSubCode').val();
            var $year = $('#selectYear').val();
            if ($ComSubCode != "" && $year != "") {
                var originGridURL = '@Url.Action("ReadNullData", "WindSpeedManagement", new { area = "Admin"})'
                var url = originGridURL + "?comSubCode=" + $ComSubCode + "&year=" + $year;
                $('#GridNull').data('kendoGrid').dataSource.transport.options.read.url = url;
                $('#GridNull').data('kendoGrid').dataSource.read();
                $('#popup').modal("show")
            } else {
                bootbox.alert('please check comCode and year');
            }
        }

        function onDataRead() {
            var comSubCodeSelected = $('#AllComSubCode').val();
            var yearSelected = $('#selectYear').val();
            var monthSelected = $('#selectMonth').val();
            return { comSubCode: comSubCodeSelected, year: yearSelected, month: monthSelected };
        }

        function DeleteWindSpeed(e) {
            var $WindSpeed = $("#grid").data("kendoGrid");
            var dataItem = $WindSpeed.dataItem($(e.currentTarget).closest("tr"));
            var windSpeedId = $("#WindSpeedId").val();
            bootbox.confirm({
                message: '@Resources.Langues.AreYouSure',
                buttons: {
                    cancel: {
                        label: '@Resources.Langues.No',
                    }, confirm: {
                        label: '@Resources.Langues.Yes',
                        className: 'btn-success'
                    }
                },
                callback: function (callback) {
                    if (callback) {
                        $.blockUI();
                        $.post('@Url.Action("Delete_WindSpeed", "WindSpeedManagement")', { WindSpeedId: dataItem.WindSpeedId },
                        function (result) {
                            if (result) {
                                $WindSpeed.dataSource.read({ WindSpeedId: windSpeedId });
                            }
                        }).fail(function () {
                            bootbox.alert('@Resources.Langues.ContactAdmin');
                        }).always(function () {
                            $.unblockUI();
                        })
                    }
                }
            });
        }

        function OnCRUD(e) {
            var $WindSpeed = $("#grid").data("kendoGrid");
            $WindSpeed.dataSource.read();
        }

        $manualForm.submit(function (e) {
            $.blockUI();
            var data = new FormData(this);
            var $fromObj = $(this);
            var urlAction = $fromObj.attr('action');
            $.ajax({
                url: urlAction,
                cache: false,
                type: 'POST',
                dataType: "Json",
                contentType: false,
                cache: false,
                processData: false,
                data: data,
                fail: function () {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.ContactAdmin');
                }
            }).always(function () {
                //$.unblockUI();
            }).success(function (result) {
                if (result.success) {
                    $.unblockUI();
                    $('#UploadFileForm').modal("hide")
                    bootbox.alert("@Resources.Langues.Successful");
                } else {
                    $.unblockUI();
                    bootbox.alert('@Resources.Langues.Pleasecheckyourdataagain');
                }
            });
            e.preventDefault();
        });

        function onEdit(e) {
        }

        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }

        function sync_handler(e) {
            this.read();
        }

        function SaveDataNullChange() {
            var data = $("#GridNull").data("kendoGrid").dataSource.data();
            var lst = [];
            data.forEach(function (item) {
                lst.push(item)
            })
            var abc = JSON.stringify(lst);
            $.blockUI();
            $.post('@Url.Action("Update_WindSpeedNull", "WindSpeedManagement")', { data: abc },
                function (result) {
                    console.log(result.success)
                    $.unblockUI();
                    if (result.success == true) {
                        $('#grid').data('kendoGrid').dataSource.read();
                        bootbox.alert("@Resources.Langues.Successful");
                    } else {
                        bootbox.alert("@Resources.Langues.Error");
                    }
                }).fail(function () {
                    $.unblockUI();
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    //$.unblockUI();
                });
        }

        function dataYear() {
            var comSubCodeSelected = $('#AllComSubCode').val();
            return ({
                comSubCode : comSubCodeSelected
            });
        };

        $(".k-textbox").on('keyup', function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode == 13) {
                $("#AllComSubCode").data("kendoDropDownList").dataSource.read();
            }
        });
    </script>

}